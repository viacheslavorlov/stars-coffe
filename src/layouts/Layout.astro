---
import { getEntry } from "astro:content";
import { AstroContainer, AstroSection } from "#/components/astro";
// import { ThemeSwitcher } from "#/components/shadcn/ThemeSwitcher";
import { Seo } from "#/shared/seo";
import "../styles/global.css";
// import { ClientRouter } from "astro:transitions";
import DesktopMenu from "#/components/astro/DesktopMenu.astro";
// import { DesktopMenu } from "#/components/custom-react/nav-menu";
import { menuItems } from "#/shared/const/menu";
import type { SeoProps } from "#/shared/types";

interface Props {
  title: string;
  description: string;
  keywords?: string | string[];
  image?: string;
  seoData?: SeoProps;
}

const { title, description, keywords, image, seoData } = Astro.props;

const data = await getEntry("seo", "base");
const seo = seoData || (data?.data as SeoProps);
---

<!doctype html>
<html lang="ru" class="w-full scroll-smooth">
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <Seo {...seoData} />
    <!-- <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script> -->

    <!-- <ClientRouter /> -->
  </head>
  <body>
    <header transition:persist class="fixed left-0 right-0 top-0 z-20 backdrop-blur-[100px] bg-gradient-to-b from-white/40 to-transparrent border border-white/40 rounded-b-[30px]">
      <AstroSection yPadding="py-4 sm:py-6 lg:py-8">
        <AstroContainer>
          <!-- <DesktopMenu config={menuItems} client:load /> -->
          <DesktopMenu config={menuItems} />
        </AstroContainer>
      </AstroSection>
    </header>
    <main transition:animate="slide">
      <slot />
    </main>
    {/* Подключаем метрику тут */}
    {/* Не забываем подключить метрику через Partytown!!! attribute type="text/partytown" */}
  </body>
</html>
